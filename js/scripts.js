//Camila quiere montar en una atracciÃ³n y no sabe si la dejarÃ¡n subir, la altura mÃ­nima para subir son 150cm. Haz una funciÃ³n que reciba la altura en cm y determine si Camila puede montar o no.

const measureHeight = number => {
  if (number >= 150) {
    console.log('Camila puede montar');
  } else {
    console.log('Camila es un Minion');
  }
};

measureHeight(150);
measureHeight(146);

//Bego estÃ¡ intentando conseguir envÃ­o gratuito en su pedido online. Crea una funciÃ³n que reciba como parÃ¡metro el total de su compra y determine si supera los 50â‚¬ para obtener el envÃ­o gratis o si tendrÃ¡ que pagarlo.

const freeShipping = number => {
  if (number > 50) {
    console.log('Bego tendrÃ¡ envÃ­o gratuito');
  } else {
    console.log('Bego tendrÃ¡ que pagar gastos de envÃ­o.');
  }
};

freeShipping(50);
freeShipping(51);

//Sabrina quiere saber si un nÃºmero es mÃºltiplo de 7. Crea una funciÃ³n que reciba un nÃºmero y determine si es mÃºltiplo o no.

const multipleNumber = (number, divider) => {
  if (number % divider === 0) {
    console.log('El numero es multiplo.');
  } else {
    console.log('El numero no es multiplo.');
  }
};
multipleNumber(150, 7);

//Abby estÃ¡ evaluando candidatos para su equipo. Los candidatos harÃ¡n tres pruebas y cada una se evalÃºa de 0 a 10. Si la media estÃ¡ entre 0 y 4 mostrarÃ¡ el mensaje "EstÃ¡s Fuera", si la media estÃ¡ entre 5 y 7 mostrarÃ¡ "Entras en la reserva" y si la media es 8 o mÃ¡s dirÃ¡ "Salimos al amanecer".

const numericalAverages = (note1, note2, note3) => {
  if ((note1 + note2 + note3) / 3 <= 4) {
    console.log('EstÃ¡s Fuera');
  } else if (
    (note1 + note2 + note3) / 3 >= 5 &&
    (note1 + note2 + note3) / 3 === 7
  ) {
    console.log('Entras en la reserva');
  } else {
    console.log('Salimos al amanecer');
  }
};
numericalAverages(1, 3, 5);
//5  Macarena tiene tres perros de distintas razas y quiere saber cuÃ¡l de ellos es el mÃ¡s grande. Crea una funciÃ³n que reciba el peso de los tres perros y determine cuÃ¡l es el mÃ¡s pesado.

const compareWeight = (weight1, weight2, weight3) => {
  if (weight1 > weight2 && weight1 > weight3) {
    console.log('El perro 1 es mÃ¡s gordo.');
  } else if (weight2 > weight1 && weight2 > weight3) {
    console.log('El perro 2 es el mÃ¡s gordo.');
  } else {
    console.log('El perro 3 es el mÃ¡s gordo.');
  }
};
compareWeight(45, 20, 80);
compareWeight(10, 50, 20);
compareWeight(30, 15, 20);

//6 Camila estÃ¡ organizando un sorteo y cada participante tiene un nÃºmero. Si el nÃºmero es divisible por 3, gana un descuento. Si es divisible por 5, recibe un regalo. Si es divisible por ambos, obtiene el premio mayor. Si no es divisible por ninguno, no gana nada. Crea una funciÃ³n que reciba un nÃºmero entero y determine quÃ© premio le corresponde.

const discountDraw = number => {
  if (number % 3 === 0 && number % 5 === 0) {
    console.log('Â¡Enhorabuena! Has ganado el super premio.');
  } else if (number % 3 === 0) {
    console.log('Ganas un descuentito.');
  } else if (number % 5 === 0) {
    console.log('Â¡Enhorabuena!, recibes un regalo.');
  } else {
    console.log('Sigue intentandolo');
  }
};
discountDraw(30);
discountDraw(50);
discountDraw(41);
discountDraw(42);

//7 Bego estÃ¡ repartiendo golosinas entre sus amigos. Si la cantidad de golosinas es un nÃºmero par, podrÃ¡ dividirlas equitativamente. Si es impar, sobrarÃ¡ una y alguien tendrÃ¡ que decidir quÃ© hacer con ella. Crea una funciÃ³n que reciba un nÃºmero entero y determine si es par o impar, mostrando el mensaje correspondiente.

const cuantityCandy = number => {
  if (number % 2 === 0) {
    console.log('Todas teneis la misma cantidad.');
  } else {
    console.log('El que reparte y reparte, se lleva la mejor parte.');
  }
};
cuantityCandy(30);
cuantityCandy(19);

//8 Sabrina estÃ¡ planificando un viaje muy especial para celebrar el aÃ±o nuevo y quiere saber si el aÃ±o en el que piensa viajar es bisiesto, ya que eso afectarÃ¡ la fecha del viaje. Crea una funciÃ³n que reciba un aÃ±o como parÃ¡metro y determine, siguiendo la regla de que un aÃ±o es bisiesto si es divisible por 4, pero no por 100, a menos que tambiÃ©n sea divisible por 400, si es bisiesto ("Es un aÃ±o bisiesto") o si no lo es ("No es un aÃ±o bisiesto").

const leapYear = year => {
  if ((year % 4 === 0 && year % 100 !== 0) || year % 400 === 0) {
    console.log('Te irÃ¡s de viaje en un aÃ±o bisiesto');
  } else {
    console.log('El viaje serÃ¡ en un aÃ±o no bisiesto');
  }
};

leapYear(2025);
leapYear(2024);

//9 Abby estÃ¡ hackeando un sistema de seguridad en una misiÃ³n secreta. Para acceder, debe introducir un cÃ³digo numÃ©rico. La puerta solo se abrirÃ¡ si el nÃºmero es par y mayor que 50, o si es impar pero un mÃºltiplo de 7. Crea una funciÃ³n que reciba un nÃºmero y determine si Abby podrÃ¡ entrar ("Acceso concedido") o si la puerta seguirÃ¡ bloqueada ("Acceso denegado").

const hackerCamila = code => {
  if ((code % 2 === 0 && code > 50) || (code % 2 !== 0 && code % 7 === 0)) {
    console.log('Acceso concedido');
  } else {
    console.log('Acceso denegado');
  }
};

hackerCamila(2356);
hackerCamila(12);

//10 Macarena estÃ¡ evaluando la salud de sus perros segÃºn su peso y edad. Un perro se considera en peso saludable sÃ³lo si pesa entre 8 y 30 kg. AdemÃ¡s solo se considerarÃ¡ saludable si su edad es un nÃºmero mÃºltiplo de 3 y menor de 15. Crea una funciÃ³n que reciba el peso del perro y su edad. Determina si estÃ¡ saludable ("El perro estÃ¡ saludable") o si no ("Perro pocho ðŸ˜¢").

const dogHealth = (weight, age) => {
  if (weight >= 8 && weight <= 30 && age % 3 === 0 && age < 15) {
    console.log('El perro esta saludable');
  } else {
    console.log('Perro pocho');
  }
};
dogHealth(30, 10);
dogHealth(9, 9);
